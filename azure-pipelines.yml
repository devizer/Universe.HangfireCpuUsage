variables:
  NUGET_VERSION: 0.1

trigger:
  branches:
    include:
    - main
  paths:
    include:
    - '**'
    exclude:
    - 'build-scripts'
    - 'Repack-Postgres-on-Linux.yml'

jobs:

- job: Test
  pool:
    vmImage: '$(IMAGE)'
  timeoutInMinutes: 12
  strategy:
    maxParallel: 6
    matrix:
      'On Mac OS':
        IMAGE: 'macos-12'
      'On Windows 2022':
        IMAGE: 'windows-2022'
      'On Ubuntu 20.04':
        IMAGE: 'ubuntu-20.04'

  steps:
  - bash: |
       printenv | sort
       dotnet restore || dotnet restore --disable-parallel
       dotnet test -c Release
    condition: succeededOrFailed()
    displayName: 'Test'


- job: Deploy
  dependsOn: Test
  pool:
    vmImage: 'ubuntu-20.04'
  timeoutInMinutes: 7
  steps:

  - bash: |
      set -eu; set -o pipefail
      script=https://raw.githubusercontent.com/devizer/test-and-build/master/install-build-tools-bundle.sh; (wget -q -nv --no-check-certificate -O - $script 2>/dev/null || curl -ksSL $script) | bash >/dev/null
      Say --Reset-Stopwatch

      revision="$(set TZ=GMT; git log -n 999999 --date=raw --pretty=format:"%cd" | wc -l)"
      version="1.0.${revision}"
      Say "Version: $version"

      dotnet pack -c Release -p:PackageVersion=$version -p:Version=$version
      find -name '*nupkg'
      find -name '*nupkg' | xargs -0 cp -f "{}" "$SYSTEM_ARTIFACTSDIRECTORY/$(basename "{}")"
    displayName: 'Deploy NuGet'

  - task: PublishBuildArtifacts@1
    condition: succeededOrFailed()
    displayName: 'Publish'
    inputs:
      pathtoPublish: '$(System.ARTIFACTSDIRECTORY)'
      artifactName: '$(Agent.JobName)'

